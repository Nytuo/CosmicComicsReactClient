name: Build/release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
jobs:
  build-interface:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 0
      - name: Determine Release Version
        id: determine_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            latest_tag=$(git describe --tags --abbrev=0)
            tag_parts=($(echo $latest_tag | tr '.' ' '))
            patch_version=$((tag_parts[2] + 1))
            new_version="${tag_parts[0]}.${tag_parts[1]}.$patch_version"
            echo "new_version=$new_version" >> $GITHUB_ENV
          else
            echo "new_version=${{ github.ref_name }}" >> $GITHUB_ENV
          fi
      - name: Setup Node.js
        uses: actions/setup-node@v3.8.1
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: zip
        run: |
          cd dist
          zip -r ../CC_RC.zip .
      - name: Create Release with artifacts
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: ${{ env.new_version }}
          files: |
            ${{github.workspace}}/CC_RC.zip
